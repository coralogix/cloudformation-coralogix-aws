AWSTemplateFormatVersion: 2010-09-09
Description: 'CloudFormation template for creating archive s3 bucket for metrics and logs (Note: buckets are created in the same region the cloudformation is running) the template can run only on the following regions eu-west-1,eu-north-1,ap-southeast-1,ap-southeast-3,ap-south-1,us-east-2'
Parameters:
  LogsBucketName:
    Type: String
    Description: 'The name of the S3 bucket to create for the Logs and traces archive (Leave empty if not needed) must follow AWS naming rules https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html'
    AllowedPattern: '^[a-z0-9]*[a-z0-9.-]*$|^$'
    MaxLength: 63
  MetricsBucketName:
    Type: String
    Description: 'The name of the S3 bucket to create for the Metrics archive (Leave empty if not needed) must follow AWS naming rules https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html'
    AllowedPattern: '^[a-z0-9]*[a-z0-9.-]*$|^$'
    MaxLength: 63
  MetricsKmsArn:
    Type: String
    Description: 'The arn for the kms of the metrics bucket - leave empty if not needed'
  LogsKmsArn:
    Type: String
    Description: 'The arn for the kms of the logs and traces bucket - leave empty if not needed'
  CustomCoralogixArn:
    Type: String
    Description: 'In case you want to use a custom coralogix arn enter the aws account id that you want to use'
    Default: ""
  ByPassRegion:
    Type: String
    Description: 'Use only with approval from our CS team, use to bypass region restrictions'
    Default: "false"
Conditions:
  IsRegionUs2: !Equals
        - !Ref 'AWS::Region'
        - us-west-2
  IsRegionAP3: !Equals
        - !Ref 'AWS::Region'
        - ap-southeast-3
  CustomArn: !Not
    - !Equals
      - !Ref CustomCoralogixArn
      - ""
  ByPassRegionTrue: !Equals
      - !Ref ByPassRegion
      - "True"
  IsLogsKmsNotEmpty: !Not
    - !Equals
      - !Ref LogsKmsArn
      - ''
  IsMetricsKmsNotEmpty: !Not
    - !Equals
      - !Ref MetricsKmsArn
      - ''
  IsLogsBucketNameEmpty: !Not
    - !Equals
      - !Ref LogsBucketName
      - ''
  IsMetricsBucketNameEmpty: !Not
    - !Equals
      - !Ref MetricsBucketName
      - ''
  IsSameBucketName: !Equals
    - !Ref LogsBucketName
    - !Ref MetricsBucketName
  IsValidRegion: !Or
    - !Equals
        - !Ref ByPassRegion
        - "True"
    - !Equals
        - !Ref 'AWS::Region'
        - ap-southeast-3
    - !Equals
        - !Ref 'AWS::Region'
        - eu-west-1
    - !Equals
        - !Ref 'AWS::Region'
        - eu-north-1
    - !Equals
        - !Ref 'AWS::Region'
        - ap-south-1
    - !Equals
        - !Ref 'AWS::Region'
        - ap-southeast-1
    - !Equals
        - !Ref 'AWS::Region'
        - us-east-2
    - !Equals
        - !Ref 'AWS::Region'
        - us-west-2
  LogsValidations: !And
    - !Not
      - !Condition IsSameBucketName
    - !Condition IsLogsBucketNameEmpty
    - !Condition IsValidRegion
  MetricsValidations: !And
    - !Not
      - !Condition IsSameBucketName
    - !Condition IsMetricsBucketNameEmpty
    - !Condition IsValidRegion
Mappings:
  CoralogixRegionMap:
    eu-west-1:
      RoleRegion: eu1
    eu-north-1:
      RoleRegion: eu2
    ap-southeast-1:
      RoleRegion: ap2
    ap-south-1:
      RoleRegion: ap1
    ap-southeast-3:
      RoleRegion: ap3
    us-east-2:
      RoleRegion: us1
    us-west-2:
      RoleRegion: us2
Resources:
  LogsS3Bucket:
    Type: AWS::S3::Bucket
    Description: Creating Amazon S3 bucket from CloudFormation to be used for coralogix Logs archive
    Condition: LogsValidations
    Properties:
      BucketName: !Ref LogsBucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        Fn::If:
          - IsLogsKmsNotEmpty
          - ServerSideEncryptionConfiguration:
              - ServerSideEncryptionByDefault:
                  SSEAlgorithm: "aws:kms"
                  KMSMasterKeyID: !Ref LogsKmsArn
                BucketKeyEnabled: true
          - Ref: "AWS::NoValue"
  LogsS3BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Condition: LogsValidations
    Properties:
      Bucket: !Ref LogsBucketName
      PolicyDocument:
        Version: 2012-10-17
        # allow the coralogix account to upload to this bucket
        Statement:
          - Action:
              - 's3:GetObject'
              - 's3:ListBucket'
              - 's3:PutObject'
              - 's3:PutObjectTagging'
              - 's3:GetObjectTagging'
              - 's3:DeleteObject'
              - 's3:DeleteObjectVersion'
              - 's3:DeleteObjectTagging'
              - 's3:DeleteObjectVersionTagging'
            Effect: 'Allow'
            Principal: 
              AWS: !Sub 
                - 'arn:aws:iam::${aws_account_id}:role/coralogix-archive-${aws_role_region}'
                - aws_role_region: !FindInMap [CoralogixRegionMap, !Ref 'AWS::Region', RoleRegion]
                  aws_account_id: !If
                    - CustomArn
                    - !Ref CustomCoralogixArn
                    - !If
                      - IsRegionUs2
                      - "739076534691"
                      - !If 
                        - IsRegionAP3
                        - "025066248247"
                        - "625240141681"
   
            Resource:
              - !Sub 'arn:aws:s3:::${LogsBucketName}'
              - !Sub 'arn:aws:s3:::${LogsBucketName}/*'

  MetricsS3Bucket:
    Type: AWS::S3::Bucket
    Description: Creating Amazon S3 bucket from CloudFormation to be used for coralogix Metrics archive
    Condition: MetricsValidations
    Properties:
      BucketName: !Ref MetricsBucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        Fn::If:
          - IsMetricsKmsNotEmpty 
          - ServerSideEncryptionConfiguration:
              - ServerSideEncryptionByDefault:
                  SSEAlgorithm: "aws:kms"
                  KMSMasterKeyID: !Ref MetricsKmsArn
                BucketKeyEnabled: true
          - Ref: "AWS::NoValue"

  MetricsS3BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Condition: MetricsValidations
    Properties:
      Bucket: !Ref MetricsBucketName
      PolicyDocument:
        Version: 2012-10-17
        # allow the coralogix account to upload to this bucket
        Statement:
          - Action:
              - 's3:GetObject'
              - 's3:ListBucket'
              - 's3:PutObject'
              - 's3:PutObjectTagging'
              - 's3:GetObjectTagging'
              - 's3:DeleteObject'
              - 's3:DeleteObjectVersion'
              - 's3:DeleteObjectTagging'
              - 's3:DeleteObjectVersionTagging'
            Effect: 'Allow'
            Principal: 
              AWS: !Sub 
                  - 'arn:aws:iam::${aws_account_id}:role/coralogix-archive-${aws_role_region}'
                  - aws_role_region: !FindInMap [CoralogixRegionMap, !Ref 'AWS::Region', RoleRegion]
                    aws_account_id: !If
                      - CustomArn
                      - !Ref CustomCoralogixArn
                      - !If
                        - IsRegionUs2
                        - "739076534691"
                        - !If 
                          - IsRegionAP3
                          - "025066248247"
                          - "625240141681"
            Resource:
              - !Sub 'arn:aws:s3:::${MetricsS3Bucket}'
              - !Sub 'arn:aws:s3:::${MetricsS3Bucket}/*'

Outputs:
  LogsS3Bucket:
    Description: Bucket Created using this template for coralogix Logs archive.
    Value: !Ref LogsS3Bucket
    Condition: LogsValidations
  MetricsS3Bucket:
    Description: Bucket Created using this template for coralogix Metrics archive.
    Value: !Ref MetricsBucketName
    Condition: MetricsValidations
  SameBucketName:
    Description: "Duplicate Name Validation"
    Value: "Names are duplicated on both buckets"
    Condition: IsSameBucketName
  RegionValidation:
    Description: "Region Validation"
    Value: !If
      - IsValidRegion
      - "Region is valid"
      - !Sub "Region ${AWS::Region} is not valid"
