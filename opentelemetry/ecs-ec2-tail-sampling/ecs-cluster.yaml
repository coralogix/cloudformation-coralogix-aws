AWSTemplateFormatVersion: '2010-09-09'
Description: 'Step 2: Create ECS cluster and infrastructure'

Parameters:
  ClusterName:
    Type: String
    Default: otel-cluster
    Description: Name for the ECS cluster
  InstanceType:
    Type: String
    Default: t3.medium
    Description: EC2 instance type for ECS hosts
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: EC2 KeyPair for SSH access
  ECSAMI:
    Type: AWS::EC2::Image::Id
    Description: ECS-optimized AMI ID for your region
  SubnetIds:
    Type: String
    Description: Comma-separated list of private subnets for ECS services
  SecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Security group for ECS tasks/instances
  ECSInstanceRoleArn:
    Type: String
    Description: |
      ARN of an existing IAM role for ECS instances.
      If provided, this role will be used instead of creating a new one.
      Must have ECS, Cloud Map, and S3 permissions (if using S3 configs).
    Default: ""
  S3ConfigBucket:
    Type: String
    Description: |
      S3 bucket name containing configuration files.
      If provided, S3 permissions will be added to the ECS instance role.
      Leave empty if not using S3 configuration.
    Default: ""

Conditions:
  UseCustomInstanceRole:
    Fn::Not:
      - Fn::Equals:
          - !Ref ECSInstanceRoleArn
          - ""
  CreateInstanceRole:
    Fn::Not:
      - Condition: UseCustomInstanceRole
  UseS3Config:
    Fn::Not:
      - Fn::Equals:
          - !Ref S3ConfigBucket
          - ""

Resources:
  OtelECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref ClusterName

  ECSInstanceRole:
    Type: AWS::IAM::Role
    Condition: CreateInstanceRole
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: ['sts:AssumeRole']
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/AWSCloudMapFullAccess
      Policies: !If
        - UseS3Config
        - - PolicyName: S3ConfigAccess
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - s3:GetObject
                    - s3:GetObjectVersion
                  Resource: !Sub "arn:aws:s3:::${S3ConfigBucket}/*"
        - !Ref AWS::NoValue

  ECSInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles: 
        - !If
          - UseCustomInstanceRole
          - !Select [1, !Split ["/", !Ref ECSInstanceRoleArn]]  # Extract role name from ARN
          - !Ref ECSInstanceRole

  ECSLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub "${ClusterName}-lt"
      LaunchTemplateData:
        ImageId: !Ref ECSAMI
        InstanceType: !Ref InstanceType
        IamInstanceProfile:
          Arn: !GetAtt ECSInstanceProfile.Arn
        KeyName: !Ref KeyName
        SecurityGroupIds: [ !Ref SecurityGroupId ]
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            echo ECS_CLUSTER=${ClusterName} >> /etc/ecs/ecs.config

  ECSAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: !Split [",", !Ref SubnetIds]
      LaunchTemplate:
        LaunchTemplateId: !Ref ECSLaunchTemplate
        Version: !GetAtt ECSLaunchTemplate.LatestVersionNumber
      MinSize: 2
      MaxSize: 4
      DesiredCapacity: 2

Outputs:
  ECSClusterName:
    Description: "Name of the ECS cluster"
    Value: !Ref OtelECSCluster
    Export:
      Name: !Sub "${AWS::StackName}-cluster-name"
  ECSInstanceRoleArn:
    Description: "ARN of the ECS instance role"
    Value: !If
      - UseCustomInstanceRole
      - !Ref ECSInstanceRoleArn
      - !GetAtt ECSInstanceRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-instance-role-arn" 