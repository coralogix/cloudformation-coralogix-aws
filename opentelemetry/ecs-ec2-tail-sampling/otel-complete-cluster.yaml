AWSTemplateFormatVersion: '2010-09-09'
Description: |
  OpenTelemetry Services for Existing ECS Cluster with CloudMap, Receivers, and Gateway.
  This template deploys:
  1. CloudMap namespace for service discovery
  2. OTel receivers for telemetry collection
  3. OTel gateway for centralized processing


Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Basic Configuration"
        Parameters:
          - ClusterName
          - CoralogixRegion
          - CoralogixApiKey
          - CDOTImageVersion
      
      - Label:
          default: "OpenTelemetry Configuration Location"
        Parameters:
          - S3ConfigBucket
          - ReceiverS3ConfigKey
          - GatewayS3ConfigKey
      
      - Label:
          default: "Application Configuration"
        Parameters:
          - ApplicationName
          - SubsystemName
      
      - Label:
          default: "Container Configuration"
        Parameters:
          - Image
          - Memory
      
      - Label:
          default: "Deployment Configuration"
        Parameters:
          - ReceiverTaskCount
          - GatewayTaskCount
          - TaskExecutionRoleArn
      
      - Label:
          default: "Network Configuration"
        Parameters:
          - VpcId
          - SubnetIds
          - SecurityGroupId
    
    ParameterLabels:
      ClusterName:
        default: "ECS Cluster Name"
      CoralogixRegion:
        default: "Coralogix Region"
      CoralogixApiKey:
        default: "Coralogix API Key"
      CDOTImageVersion:
        default: "CDOT Image Version"
      S3ConfigBucket:
        default: "S3 Bucket Name"
      ReceiverS3ConfigKey:
        default: "Receiver S3 Config Key"
      GatewayS3ConfigKey:
        default: "Gateway S3 Config Key"
      ApplicationName:
        default: "Application Name"
      SubsystemName:
        default: "Subsystem Name"
      Image:
        default: "Custom Image (overrides CDOTImageVersion)"
      Memory:
        default: "Memory (MiB)"
      ReceiverTaskCount:
        default: "Receiver Task Count"
      GatewayTaskCount:
        default: "Gateway Task Count"
      TaskExecutionRoleArn:
        default: "External Task Execution Role ARN"
      VpcId:
        default: "VPC ID"
      SubnetIds:
        default: "Subnet IDs"
      SecurityGroupId:
        default: "Security Group ID"

Parameters:
  ClusterName:
    Type: String
    Description: Name of the existing ECS cluster

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Existing VPC for CloudMap namespace and ECS services

  SubnetIds:
    Type: String
    Description: Comma-separated list of private subnets for ECS services

  SecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Security group for ECS tasks

  CoralogixRegion:
    Type: String
    Description: "The Coralogix location region [EU1|EU2|AP1|AP2|AP3|US1|US2]]"
    AllowedValues:
      - EU1
      - EU2
      - AP1
      - AP2
      - AP3
      - US1
      - US2

  CoralogixApiKey:
    Type: String
    Description: "The Send-Your-Data API key for your Coralogix account. See: https://coralogix.com/docs/user-guides/account-management/api-keys/send-your-data-api-key/"
    NoEcho: true
    AllowedPattern: ".+"
    ConstraintDescription: "API Key required."

  CDOTImageVersion:
    Description: |
      The Coralogix Distribution OpenTelemetry Image Version/Tag.
      View available tags here: https://hub.docker.com/r/coralogixrepo/coralogix-otel-collector/tags
      This is required when Custom Image is set to "none".
    Type: String

  Image:
    Description: |
      The OpenTelemetry Collector Image to use.
      If specified, this value will override the CDOTImageVersion parameter and
      the coralogix otel collector image.
    Default: "none"
    Type: String

  S3ConfigBucket:
    Type: String
    Description: |
      S3 bucket name containing the configuration files.
      Example: 'my-bucket'
    AllowedPattern: ".+"
    ConstraintDescription: "S3 bucket name is required."

  ReceiverS3ConfigKey:
    Type: String
    Description: |
      S3 object key for the Receiver configuration file.
      Example: 'configs/receiver-config.yaml'
    AllowedPattern: ".+"
    ConstraintDescription: "S3 object key is required."

  GatewayS3ConfigKey:
    Type: String
    Description: |
      S3 object key for the Gateway configuration file.
      Example: 'configs/gateway-config.yaml'
    AllowedPattern: ".+"
    ConstraintDescription: "S3 object key is required."

  ApplicationName:
    Type: String
    Description: |
      The default name of your application.
      Default application name will be only be used when no dynamic application name is found, as configured in the Coralogix exporter.
    MinLength: "1"
    MaxLength: "64"
    Default: "OTEL"

  SubsystemName:
    Type: String
    Description: |
      The default subsystem name of your application.
      Default subsystem name will be only be used when no dynamic application name is found, as configured in the Coralogix exporter.
    MinLength: "1"
    MaxLength: "64"
    Default: "ECS-EC2"

  Memory:
    Type: Number
    Default: 1024
    Description: Memory for ECS tasks (MiB)

  ReceiverTaskCount:
    Type: Number
    Default: 2
    Description: Number of Receiver tasks to run

  GatewayTaskCount:
    Type: Number
    Default: 1
    Description: Number of Gateway tasks to run

  TaskExecutionRoleArn:
    Type: String
    Default: ""
    Description: |
      External IAM role ARN for both OTel receiver and gateway task execution.
      If provided, this role will be used instead of creating new roles.
      Leave empty to create new roles.
    AllowedPattern: "^$|^arn:aws:iam::[0-9]{12}:role/.*$"

Conditions:
  UseImage: !Not [!Equals [!Ref Image, "none"]]
  UseExternalRole: !Equals [!Ref TaskExecutionRoleArn, ""]

Mappings:
  CoralogixRegionMap:
    EU1:
      Endpoint: ingress.coralogix.com:443
      Domain: coralogix.com
    EU2:
      Endpoint: ingress.eu2.coralogix.com:443
      Domain: eu2.coralogix.com
    AP1:
      Endpoint: ingress.coralogix.in:443
      Domain: coralogix.in
    AP2:
      Endpoint: ingress.coralogixsg.com:443
      Domain: coralogixsg.com
    AP3:
      Endpoint: ingress.ap3.coralogix.com:443
      Domain: ap3.coralogix.com
    US1:
      Endpoint: ingress.coralogix.us:443
      Domain: coralogix.us
    US2:
      Endpoint: ingress.cx498.coralogix.com:443
      Domain: cx498.coralogix.com

Resources:
  # CloudMap Namespace
  OtelCloudMapNamespace:
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Properties:
      Name: cx-otel
      Vpc: !Ref VpcId
      Description: "Cloud Map namespace for OpenTelemetry services"

  # CloudMap Services
  OtelReceiverCloudMapService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      Name: grpc-receiver
      NamespaceId: !Ref OtelCloudMapNamespace
      DnsConfig:
        DnsRecords:
          - Type: A
            TTL: 60
      HealthCheckCustomConfig:
        FailureThreshold: 1

  OtelGatewayCloudMapService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      Name: grpc-gateway
      NamespaceId: !Ref OtelCloudMapNamespace
      DnsConfig:
        DnsRecords:
          - Type: A
            TTL: 60
      HealthCheckCustomConfig:
        FailureThreshold: 1

  OtelTaskExecutionRole:
    Type: AWS::IAM::Role
    Condition: UseExternalRole
    Properties:
      RoleName: !Sub "${AWS::StackName}-otel-task-execution-role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        - PolicyName: S3ReadAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource: !Sub "arn:aws:s3:::${S3ConfigBucket}/*"
        - PolicyName: CloudMapDiscovery
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - servicediscovery:DiscoverInstances
                  - servicediscovery:ListInstances
                  - servicediscovery:ListServices
                  - servicediscovery:ListNamespaces
                Resource: "*"

  OtelReceiverTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ExecutionRoleArn: !If
        - UseExternalRole
        - !Ref OtelTaskExecutionRole
        - !Ref TaskExecutionRoleArn
      TaskRoleArn: !If
        - UseExternalRole
        - !Ref OtelTaskExecutionRole
        - !Ref TaskExecutionRoleArn
      Family: opentelemetry-receiver
      RequiresCompatibilities: [EC2]
      NetworkMode: awsvpc

      ContainerDefinitions:
        - Name: coralogix-otel-receiver
          Cpu: 0
          Memory: !Ref Memory
          Command: ["--config", !Sub "s3://${S3ConfigBucket}.s3.${AWS::Region}.amazonaws.com/${ReceiverS3ConfigKey}"]
          Image: !If
            - UseImage
            - !Ref Image
            - !Sub "coralogixrepo/coralogix-otel-collector:${CDOTImageVersion}"
          Essential: true
          PortMappings:
            - ContainerPort: 4317
              Name: grpc
              Protocol: tcp
              AppProtocol: grpc
            - ContainerPort: 4318
              Name: http
              Protocol: tcp
            - ContainerPort: 8888
              Name: metrics
              Protocol: tcp
            - ContainerPort: 1777
              Name: pprof
              Protocol: tcp
          Privileged: true
          Environment:
            - Name: CORALOGIX_DOMAIN
              Value: !FindInMap [CoralogixRegionMap, !Ref CoralogixRegion, Domain]
            - Name: PRIVATE_KEY
              Value: !Ref CoralogixApiKey
            - Name: APP_NAME
              Value: !Ref ApplicationName
            - Name: SUB_SYS
              Value: !Ref SubsystemName
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: "/ecs/opentelemetry-receiver"
              mode: "non-blocking"
              awslogs-create-group: "true"
              max-buffer-size: "25m"
              awslogs-region: "us-east-1"
              awslogs-stream-prefix: "ecs"

  OtelGatewayTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ExecutionRoleArn: !If
        - UseExternalRole
        - !Ref OtelTaskExecutionRole
        - !Ref TaskExecutionRoleArn
      TaskRoleArn: !If
        - UseExternalRole
        - !Ref OtelTaskExecutionRole
        - !Ref TaskExecutionRoleArn
      Family: opentelemetry-gateway
      RequiresCompatibilities: [EC2]
      NetworkMode: awsvpc

      ContainerDefinitions:
        - Name: coralogix-otel-gateway
          Cpu: 0
          Memory: !Ref Memory
          Command: ["--config", !Sub "s3://${S3ConfigBucket}.s3.${AWS::Region}.amazonaws.com/${GatewayS3ConfigKey}"]
          Image: !If
            - UseImage
            - !Ref Image
            - !Sub "coralogixrepo/coralogix-otel-collector:${CDOTImageVersion}"
          Essential: true
          PortMappings:
            - ContainerPort: 4317
              Name: grpc
              Protocol: tcp
              AppProtocol: grpc
            - ContainerPort: 4318
              Name: http
              Protocol: tcp
            - ContainerPort: 8888
              Name: metrics
              Protocol: tcp
            - ContainerPort: 1777
              Name: pprof
              Protocol: tcp
          Privileged: true
          Environment:
            - Name: CORALOGIX_DOMAIN
              Value: !FindInMap [CoralogixRegionMap, !Ref CoralogixRegion, Domain]
            - Name: PRIVATE_KEY
              Value: !Ref CoralogixApiKey
            - Name: APP_NAME
              Value: !Ref ApplicationName
            - Name: SUB_SYS
              Value: !Ref SubsystemName
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: "/ecs/opentelemetry-gateway"
              mode: "non-blocking"
              awslogs-create-group: "true"
              max-buffer-size: "25m"
              awslogs-region: "us-east-1"
              awslogs-stream-prefix: "ecs"

  OtelReceiverService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ClusterName
      LaunchType: EC2
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups: [!Ref SecurityGroupId]
          Subnets: !Split [",", !Ref SubnetIds]
      ServiceName: coralogix-otel-receiver
      ServiceRegistries:
        - RegistryArn: !GetAtt OtelReceiverCloudMapService.Arn
      SchedulingStrategy: REPLICA
      DesiredCount: !Ref ReceiverTaskCount
      DeploymentController:
        Type: ECS
      EnableECSManagedTags: true
      TaskDefinition: !Ref OtelReceiverTaskDefinition

  OtelGatewayService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ClusterName
      LaunchType: EC2
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups: [!Ref SecurityGroupId]
          Subnets: !Split [",", !Ref SubnetIds]
      ServiceName: coralogix-otel-gateway
      ServiceRegistries:
        - RegistryArn: !GetAtt OtelGatewayCloudMapService.Arn
      SchedulingStrategy: REPLICA
      DesiredCount: !Ref GatewayTaskCount
      DeploymentController:
        Type: ECS
      EnableECSManagedTags: true
      TaskDefinition: !Ref OtelGatewayTaskDefinition

Outputs:
  CloudMapNamespaceId:
    Description: "Cloud Map namespace ID"
    Value: !Ref OtelCloudMapNamespace
    Export:
      Name: !Sub "${AWS::StackName}-namespace-id"
  
  CloudMapNamespaceName:
    Description: "Cloud Map namespace name"
    Value: !Ref OtelCloudMapNamespace
    Export:
      Name: !Sub "${AWS::StackName}-namespace-name"

  ReceiverServiceDiscoveryName:
    Description: "Service discovery DNS name for receivers"
    Value: !Sub "grpc-receiver.cx-otel"
    Export:
      Name: !Sub "${AWS::StackName}-receiver-dns"

  GatewayServiceDiscoveryName:
    Description: "Service discovery DNS name for gateway"
    Value: !Sub "grpc-gateway.cx-otel"
    Export:
      Name: !Sub "${AWS::StackName}-gateway-dns"

  OtelReceiverServiceArn:
    Description: "Receiver service ARN"
    Value: !Ref OtelReceiverService
    Export:
      Name: !Sub "${AWS::StackName}-receiver-service-arn"

  OtelGatewayServiceArn:
    Description: "Gateway service ARN"
    Value: !Ref OtelGatewayService
    Export:
      Name: !Sub "${AWS::StackName}-gateway-service-arn" 