AWSTemplateFormatVersion: '2010-09-09'
Description: 'Deploy Gateway Agents service'

Parameters:
  ClusterName:
    Type: String
    Default: otel-cluster
    Description: Name of the ECS cluster
  NamespaceId:
    Type: String
    Description: Cloud Map namespace ID (from Step 1)
  SubnetIds:
    Type: String
    Description: Comma-separated list of private subnets for ECS services
  SecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Security group for ECS tasks
  CDOTImageVersion:
    Description: |
      The Coralogix Distribution OpenTelemetry Image Version/Tag.
      View available tags here: https://hub.docker.com/r/coralogixrepo/coralogix-otel-collector/tags
      This is required when Custom Image is set to "none".
    Type: String
  Memory:
    Type: Number
    Default: 1024
    Description: Memory for ECS tasks (MiB)
  CoralogixRegion:
    Type: String
    Description: "The Coralogix location region [EU1|EU2|AP1|AP2|AP3|US1|US2]]"
    AllowedValues:
      - EU1
      - EU2
      - AP1
      - AP2
      - AP3
      - US1
      - US2
  CoralogixApiKey:
    Type: String
    Description: "The Send-Your-Data API key for your Coralogix account. See: https://coralogix.com/docs/user-guides/account-management/api-keys/send-your-data-api-key/"
    NoEcho: true
    AllowedPattern: ".+"
    ConstraintDescription: "API Key required."
  ApplicationName:
    Type: String
    Default: ecs-ec2-integration
    Description: Application name for Coralogix
  SubsystemName:
    Type: String
    Default: sampling
    Description: Subsystem name for Coralogix
  S3ConfigBucket:
    Type: String
    Description: |
      S3 bucket name containing the configuration file.
      Example: 'my-bucket'
  GatewayS3ConfigKey:
    Type: String
    Description: |
      S3 object key for the Gateway configuration file.
      Example: 'configs/gateway-config.yaml'
    AllowedPattern: ".+"
    ConstraintDescription: "S3 object key is required."
  GatewayTaskCount:
    Type: Number
    Default: 2
    Description: Number of Gateway tasks to run
  TaskExecutionRoleArn:
    Type: String
    Default: ""
    Description: |
      External IAM role ARN for gateway task execution.
      If provided, this role will be used instead of creating new roles.
      Leave empty to create new roles.
    AllowedPattern: "^$|^arn:aws:iam::[0-9]{12}:role/.*$"

Conditions:
  UseExternalRole: !Equals [!Ref TaskExecutionRoleArn, ""]

Mappings:
  CoralogixRegionMap:
    EU1:
      Endpoint: ingress.coralogix.com:443
      Domain: coralogix.com
    EU2:
      Endpoint: ingress.eu2.coralogix.com:443
      Domain: eu2.coralogix.com
    AP1:
      Endpoint: ingress.coralogix.in:443
      Domain: coralogix.in
    AP2:
      Endpoint: ingress.coralogixsg.com:443
      Domain: coralogixsg.com
    AP3:
      Endpoint: ingress.ap3.coralogix.com:443
      Domain: ap3.coralogix.com
    US1:
      Endpoint: ingress.coralogix.us:443
      Domain: coralogix.us
    US2:
      Endpoint: ingress.cx498.coralogix.com:443
      Domain: cx498.coralogix.com

Resources:

  OtelGatewayTaskExecutionRole:
    Condition: UseExternalRole
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-otel-gateway-task-execution-role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        - PolicyName: S3ReadAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource: !Sub "arn:aws:s3:::${S3ConfigBucket}/*"

  OtelGatewayCloudMapService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      Name: grpc-gateway
      NamespaceId: !Ref NamespaceId
      DnsConfig:
        DnsRecords:
          - Type: A
            TTL: 60
      HealthCheckCustomConfig:
        FailureThreshold: 1

  OtelGatewayTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ExecutionRoleArn: !If
        - UseExternalRole
        - !Ref OtelGatewayTaskExecutionRole
        - !Ref TaskExecutionRoleArn
      TaskRoleArn: !If
        - UseExternalRole
        - !Ref OtelGatewayTaskExecutionRole
        - !Ref TaskExecutionRoleArn
      Family: opentelemetry-gateway
      RequiresCompatibilities: [EC2]
      NetworkMode: awsvpc

      ContainerDefinitions:
        - Name: coralogix-otel-gateway
          Cpu: 0
          Memory: !Ref Memory
          Command: ["--config", !Sub "s3://${S3ConfigBucket}.s3.${AWS::Region}.amazonaws.com/${GatewayS3ConfigKey}"]
          Image: !Sub "coralogixrepo/coralogix-otel-collector:${CDOTImageVersion}"
          Essential: true
          PortMappings:
            - ContainerPort: 4317
              Name: grpc
              Protocol: tcp
              AppProtocol: grpc
            - ContainerPort: 4318
              Name: http
              Protocol: tcp
            - ContainerPort: 8888
              Name: metrics
              Protocol: tcp
            - ContainerPort: 1777
              Name: pprof
              Protocol: tcp
          Privileged: true
          Environment:
            - Name: CORALOGIX_DOMAIN
              Value: !FindInMap [CoralogixRegionMap, !Ref CoralogixRegion, Domain]
            - Name: PRIVATE_KEY
              Value: !Ref CoralogixApiKey
            - Name: APP_NAME
              Value: !Ref ApplicationName
            - Name: SUB_SYS
              Value: !Ref SubsystemName
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: "/ecs/opentelemetry-gateway"
              mode: "non-blocking"
              awslogs-create-group: "true"
              max-buffer-size: "25m"
              awslogs-region: "us-east-1"
              awslogs-stream-prefix: "ecs"

  OtelGatewayService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ClusterName
      LaunchType: EC2
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups: [!Ref SecurityGroupId]
          Subnets: !Split [",", !Ref SubnetIds]
      ServiceName: coralogix-otel-gateway
      ServiceRegistries:
        - RegistryArn: !GetAtt OtelGatewayCloudMapService.Arn
      SchedulingStrategy: REPLICA
      DesiredCount: !Ref GatewayTaskCount
      DeploymentController:
        Type: ECS
      EnableECSManagedTags: true
      TaskDefinition: !Ref OtelGatewayTaskDefinition

Outputs:
  GatewayServiceDiscoveryName:
    Description: "Service discovery DNS name for gateway agents"
    Value: !Sub "grpc-gateway.cx-otel"
    Export:
      Name: !Sub "${AWS::StackName}-gateway-dns"
  GatewayServiceArn:
    Description: "Gateway service ARN"
    Value: !Ref OtelGatewayService
    Export:
      Name: !Sub "${AWS::StackName}-gateway-service-arn" 