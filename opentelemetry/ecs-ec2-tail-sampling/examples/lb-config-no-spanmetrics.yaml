receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
        max_recv_msg_size_mib: 20
      http:
        endpoint: 0.0.0.0:4318
  prometheus:
    config:
      scrape_configs:
        - job_name: otel-collector-metrics
          scrape_interval: 30s
          static_configs:
            - targets: ["127.0.0.1:8888"]

processors:
  batch:
    send_batch_max_size: 2048
    send_batch_size: 1024
    timeout: 1s
  resource/metadata:
    attributes:
      - action: upsert
        key: cx.otel_integration.name
        value: coralogix-integration-ecs-tail-sampling

exporters:
  loadbalancing:
    routing_key: "traceID"
    protocol:
      otlp:
        tls:
          insecure: true
    resolver:
      aws_cloud_map:
        namespace: cx-otel
        service_name: grpc-sampling
        interval: 30s
        port: 4317
  coralogix:
    domain: "${CORALOGIX_DOMAIN}"
    private_key: "${PRIVATE_KEY}"
    application_name: "${APP_NAME}"
    subsystem_name: "${SUB_SYS}"
    application_name_attributes:
      - "aws.ecs.cluster"
      - "aws.ecs.task.definition.family"
    subsystem_name_attributes:
      - "aws.ecs.container.name"
      - "aws.ecs.docker.name"
      - "docker.name"
    timeout: 30s

extensions:
  health_check:
  pprof:

service:
  extensions:
    - health_check
    - pprof

  pipelines:
    traces:
      receivers: [otlp]
      processors: [resource/metadata, batch]
      exporters: [loadbalancing]

  telemetry:
    logs:
      encoding: json
      level: warn
    metrics:
      readers:
        - pull:
            exporter:
              prometheus:
                host: 0.0.0.0
                port: 8888 